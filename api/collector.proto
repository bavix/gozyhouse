syntax = "proto3";

package gozyhouse.collector.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

option go_package = "/pkg/api";

service Collector {
  // Method for sending events in a batch.
  // The limit must be set via ENV.
  // Events that fail validation are ignored.
  rpc Event(EventRequest) returns (stream EventResponse) {};

  // Validator in a real application is not desirable to use.
  // It is needed only for debugging.
  rpc Validator(ValidatorRequest) returns (stream ValidatorResponse) {};
}

message UUID {
  uint64 high = 1;
  uint64 low = 2;
}

message IPv6 {
  uint64 high = 1;
  uint64 low = 2;
}

message IP {
  oneof client_ip {
    fixed32 v4 = 1;
    IPv6 v6 = 2;
  }
}

message Event {
  UUID app = 1; // Application ID
  UUID bid = 2; // Bind ID generated on the client side
  google.protobuf.Struct meta = 3; // App/device... metadata (json)

  string request_url = 4; // Current url (url with query)
  string referral_url = 5; // Referral url (url with query)

  repeated IP client_ips = 6; // Client ip-stack

  optional UUID client = 7; // User ID
  google.protobuf.Struct client_data = 8; // user-agent,cookies,etc...

  UUID category = 9; // event category
  string name = 10; // event name
  string label = 11; // event label
  google.protobuf.Struct payload = 12; // event metadata/payload (json)

  google.protobuf.Timestamp created_at = 13;
}

message EventRequest {
  repeated Event items = 1;
}

message EventResponse {
  repeated UUID bids = 1;
}

message ValidatorRequest {
  repeated Event items = 1;
}

message ValidatorResponse {
  enum ErrCode {
    UNDEFINED = 0;
    APP_ID = 1;
    BIND_ID = 2;
    METADATA = 3;
    REQUEST_URL = 4;
    REFERRAL_URL = 5;
    CLIENT_IP = 6;
    CLIENT_DATA = 7;
    E_CATEGORY = 8;
    E_NAME = 9;
    E_LABEL = 10;
    E_PAYLOAD = 11;
    CREATED_AT = 12;
  }

  message Item {
    UUID bid = 1; // event bid
    repeated ErrCode errors = 2; // column list
  }

  repeated Item items = 1;
}
